from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from data_base.db import add_user, add_keyword, get_keywords, delete_keyword

router = Router()

@router.message(Command("start"))
async def start_cmd(message: types.Message):
    add_user(message.from_user.id)
    await message.answer("üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–æ–º—É, —ñ —è —à—É–∫–∞—Ç–∏–º—É —ó—Ö —É –≥—Ä—É–ø–∞—Ö.\n\n–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ /keywords")

@router.message(Command("keywords"))
async def list_keywords(message: types.Message):
    keywords = get_keywords(message.from_user.id)
    if not keywords:
        return await message.answer("–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤.")
    
    buttons = [
        [InlineKeyboardButton(text=f"‚ùå {kw}", callback_data=f"delkw:{kw}")]
        for kw in keywords
    ]
    markup = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer("üîë –¢–≤–æ—ó –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞:", reply_markup=markup)

@router.message(F.text)
async def add_keywords(message: types.Message):
    add_user(message.from_user.id)
    words = [kw.strip().lower() for kw in message.text.split(",") if kw.strip()]
    for kw in words:
        add_keyword(message.from_user.id, kw)
    await message.answer(f"‚úÖ –î–æ–¥–∞–Ω–æ —Å–ª—ñ–≤: {len(words)}\n–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è: /keywords")

@router.callback_query(F.data.startswith("delkw:"))
async def delete_kw_cb(callback: types.CallbackQuery):
    keyword = callback.data.split(":", 1)[1]
    delete_keyword(callback.from_user.id, keyword)
    await callback.answer(f"‚ùå –í–∏–¥–∞–ª–µ–Ω–æ: {keyword}")
    await list_keywords(callback.message)
